mscheat.txt* Settings and various information for the Mode Set configuration

Author: Mode Set

==============================================================================
Mode Set Cheat                          *mscheat*

1. Introduction                         |mscheat-intro|
2. Key Mapping                          |mscheat-key-mappings|
3. Leader Mapping                       |mscheat-leader-mappings|
==============================================================================
1. Introduction                         *mscheat-intro*

Listed below are key and leader mappings setup within the .vimrc file. Check 
out the installed plug-in help docs as they setup their own bindings as well.
==============================================================================
2. Key Mapping                          *mscheat-key-mappings*

Normal Mode:
  j             => move down
  k             => move up
  ;             => Terminal emulator (same as ":")
  <c-h>         => move to split left
  <c-l>         => move to split right
  <c-k>         => move to split top
  <c-l>         => move to split bottom
  <tab>         => move between block
  ,,            => insert a single character
  ;;            => prepend a single character
  zR            => toggle all folds
  \             => clear search highlight
  <c-Up>        => bubble selected line up (In Terminal, map to F11 in .vimrc.local)
  <c-Down>      => bubble selected line down (In Terminal, map to F11 in .vimrc.local)
  gV            => Visually select the text that was last edited/pasted

Insert Mode:
  jj            => <ESC>
  jk            => <ESC>
  <tab>         => supertab forward
  <s-tab>       => supertab backward
  <c-space>     => snippets forward
  <s-c-space>   => snippets backward

Function Keys:
  <F1>          => toggle full screen mode
  <F2>          => toggle NerdTree
  <F3>          => toggle taglist
  <F4>          => toggle yankring
  <F5>          => show file type snippets (insert mode only)
  <F6>          => currently open and available
  <F7>          => currently open and available
  <F8>          => currently open and available
  <F9>          => currently open and available
  <F10>         => reserved for .vimrc.local
  <F11>         => reserved for .vimrc.local
  <F12>         => reserved for .vimrc.local
==============================================================================
3. Leader Mapping                       *mscheat-leader-mappings*

The leader key is mapped to comma ",". Always in normal mode.

Global:
  <leader>a     => ack search
  <leader>wt    => toggle wrapping in the current buffer
  <leader>evm   => edit .vimrc
  <leader>evl   => edit .vimrc.local
  <leader>CN    => collapse multi-line whitespace to one line
  <leader>CW    => clean empty whitespace (when [\s] is in status line)
  <leader>CT    => change from tabs to soft spaces
  <leader>s     => open current buffer in a new split
  <leader>rt    => reload ctags
  <leader>t     => Command-T trigger
  <leader>T     => Command-T Open Buffers
  <leader>gs    => git status
  <leader>e     => start an edit command with the path of the current file
  <leader>lc    => close syntastic's location list
  <leader>y     => in visual mode yank the contents to register "x"
  <leader>p     => paste the contents of named register "x"

Rails:
  <leader>c     => Edit the specified or current controller
  <leader>vc    => Edit controller in vertical split
  <leader>sc    => Edit controller in new split
  <leader>vf    => Edit the functional test in vertical split
  <leader>sf    => Edit the functional test in new split
  <leader>m     => Edit the specified or current model
  <leader>vm    => Edit model in vertical split
  <leader>sm    => Edit model in new split
  <leader>u     => Edit the unit test for the specified name
  <leader>vu    => Edit unit test in vertical split
  <leader>su    => Edit unit test in new split
  <leader>vv    => Edit view in a vertical split
  <leader>sv    => Edit view in new split
  <leader>A     => Edit alternate file
  <leader>av    => Edit alternate file in new vertical split
  <leader>as    => Edit alternate file in new split
  <leader>aa    => Edit related file

CoffeeScript:
  <leader>b     => Print selected to JavaScript in scratch buffer
  <leader>d     => Run selected text in scratch buffer (uses node)
====================================================================
vim:tw=78:ts=8:ft=help:norl:

